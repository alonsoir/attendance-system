# attendance_system/nginx/conf/conf.d/upstream.conf

# Configuración de backends con healthchecks
upstream backend_servers {
   least_conn;  # Balanceo por menor número de conexiones

   server back:8000 max_fails=3 fail_timeout=30s;
   server back:8001 max_fails=3 fail_timeout=30s backup;

   keepalive 32;
   keepalive_requests 100;
   keepalive_timeout 60s;

   check interval=3000 rise=2 fall=5 timeout=1000 type=http;
   check_http_send "HEAD / HTTP/1.0\r\n\r\n";
   check_http_expect_alive http_2xx http_3xx;
}

# Configuración de frontends con sticky sessions
upstream frontend_servers {
   ip_hash;  # Sticky sessions basadas en IP

   server front:80 max_fails=3 fail_timeout=30s;
   server front:81 max_fails=3 fail_timeout=30s backup;

   keepalive 32;
   keepalive_requests 100;
   keepalive_timeout 60s;

   check interval=3000 rise=2 fall=5 timeout=1000 type=http;
   check_http_send "HEAD / HTTP/1.0\r\n\r\n";
   check_http_expect_alive http_2xx http_3xx;
}

# Configuración de Vault con acceso restringido
upstream vault_servers {
   least_conn;

   server vault:8200 max_fails=3 fail_timeout=30s;

   keepalive 32;
   keepalive_requests 100;
   keepalive_timeout 60s;

   check interval=3000 rise=2 fall=5 timeout=1000 type=http;
   check_http_send "HEAD /v1/sys/health HTTP/1.0\r\n\r\n";
   check_http_expect_alive http_2xx;
}

# Configuración de Redis para caché
upstream redis_servers {
   server redis:6379 max_fails=3 fail_timeout=30s;
   server redis:6380 max_fails=3 fail_timeout=30s backup;

   keepalive 32;
   keepalive_timeout 60s;
}

# Configuración de bases de datos PostgreSQL
upstream postgres_servers {
   least_conn;

   server postgres:5432 max_fails=3 fail_timeout=30s;
   server postgres:5433 max_fails=3 fail_timeout=30s backup;

   keepalive 32;
   keepalive_timeout 60s;
}

# Configuración de Prometheus para métricas
upstream prometheus_servers {
   server prometheus:9090 max_fails=3 fail_timeout=30s;

   keepalive 32;
   keepalive_timeout 60s;
}

# Configuración de Grafana para monitorización
upstream grafana_servers {
   ip_hash;  # Mantener sesiones de usuario

   server grafana:3000 max_fails=3 fail_timeout=30s;

   keepalive 32;
   keepalive_timeout 60s;
}

# Variables de control para los healthchecks
map $upstream_addr $upstream_status {
   default 0;
   "~.*:.*" 1;
}

# Log format para upstream
log_format upstream_log '[$time_local] $remote_addr - $remote_user - $server_name '
                      '$upstream_addr $upstream_status $upstream_response_time '
                      '$request';

# Configuración de logs para upstream
access_log /var/log/nginx/upstream-access.log upstream_log if=$upstream_status;