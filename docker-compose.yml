version: '3.8'

services:
  vault:
    image: vault:1.13.3
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: attendance_root_token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_ADDR: http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/file
    command: server -dev
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  vault-init:
    image: vault:1.13.3
    depends_on:
      - vault
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=attendance_root_token
    volumes:
      - ./attendance_system/backend/scripts:/scripts:ro
      - ./.env:/app/.env:ro
    command: ["/bin/sh", "-c", "chmod +x /scripts/init-vault.sh && /scripts/init-vault.sh"]

  front:
    image: frontend-attendance
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=attendance_root_token
    depends_on:
      - vault-init
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  back:
    image: backend-attendance
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=attendance_root_token
    depends_on:
      - vault-init
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: test-postgres-encrypted:latest
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/static:/usr/share/nginx/static:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    environment:
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
    depends_on:
      - front
      - back
      - vault
    deploy:
      replicas: 1

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    depends_on:
      - back

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  falco:
    image: falcosecurity/falco:latest
    volumes:
      - /host:/host:ro
      - /dev:/dev:ro
      - /proc:/proc:ro
      - /sys:/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_ADMIN
    command: falco --config /etc/falco/falco.yaml --stdout --severity=info
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  vault-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  db-data:
    driver: local

networks:
  default:
    driver: overlay
